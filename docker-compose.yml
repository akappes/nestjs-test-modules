version: '3.8'

volumes:
  postgresql:
  elasticsearch:

networks:
  frontend:
    name: network-frontend
    driver: bridge
  backend:
    name: network-frontend
    driver: bridge
    internal: false

services:

  ## Postgres
  postgresql:
    image: postgres:alpine
    container_name: postgresql
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: project

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@docker.com'
      PGADMIN_DEFAULT_PASSWORD: 'docker'
    ports:
      - 8080:80
    depends_on:
      - postgresql
    networks:
      - frontend
      - backend

  ## ELK
  elasticsearch:
    image:  docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - cluster.name=project-cluster
      - node.name=project-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=project-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - frontend
      - backend

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - frontend
      - backend

  logstash:
    container_name: logstash
    build:
      context: ./docker/logstash
      args:
        - ELK_VERSION=${ELK_VERSION}
    volumes:
      - './docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml'
      - './docker/logstash/pipeline:/usr/share/logstash/pipeline'
    ports:
      - 5001:5001
    environment:
      LS_JAVA_OPTS: '-Xmx1g -Xms1g'
    env_file:
      - .env
    networks:
      - frontend
      - backend
    depends_on:
      - elasticsearch
